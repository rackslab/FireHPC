ClusterName={{ slurm_cluster }}                   # must be specified
SlurmctldHost={{ slurm_server }}                  # must be specified
# Disable compute nodes sockets/cores/memory configuration matching check and
# avoid nodes from being set to INVALID state. This is especially useful with
# FireHPC to emulate large compute nodes on more reasonable host.
SlurmdParameters=config_overrides                 # default: none
SlurmUser=slurm                                   # default: root
StateSaveLocation={{ slurm_state_save_loc }}      # default: /var/spool
SlurmdSpoolDir={{ slurm_slurmd_spool_dir }}       # default: /var/spool/slurmd
AccountingStorageType=accounting_storage/slurmdbd # default: accounting_storage/none
AccountingStorageHost={{ slurm_server }}          # must be specified, as soon as slurmdbd is used
AccountingStorageEnforce=qos,limits,associations  # default: none
{% if slurm_with_jwt %}
AuthAltTypes=auth/jwt
AuthAltParameters=jwt_key={{ slurm_jwt_key_path }}
{% endif %}
{% if slurm_emulator %}
{# Avoid cgroup on frontend node in emulator that would generate too many files/dirs in virtual FS #}
ProctrackType=proctrack/linuxproc
{% endif %}
{% for key, value in slurm_params.items() %}
{{ key }}={{ value }}
{% endfor %}

{% for node_group in slurm_compute_nodes %}
NodeName={{ node_group.nodes | nodeset_fold }} Sockets={{ node_group.sockets }} CoresPerSocket={{ node_group.cores }}{% if slurm_emulator %} NodeHostName={{ slurm_server }}{% endif %} State=UNKNOWN
{% endfor %}
{% for slurm_partition in slurm_partitions %}
PartitionName={{ slurm_partition.name }} Nodes={{ slurm_partition.node }} Default={{ "YES" if "default" in slurm_partition and slurm_partition.default else "NO" }} MaxTime={{ slurm_partition.maxtime }} State={{ slurm_partition.state }}
{% endfor %}
