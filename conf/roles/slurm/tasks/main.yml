---
- name: Gather OS specific variables
  ansible.builtin.include_vars:
    file: "os/{{ ansible_facts.os_family | lower }}.yml"

# On Debian, the packages create the slurm system user and group by default. On
# redhat based distributions, the user must be created manually.
- name: Create slurm system group
  ansible.builtin.group:
    name: slurm
    gid: "{{ slurm_gid }}"
  when: ansible_os_family == 'RedHat'

- name: Create slurm system user
  ansible.builtin.user:
    name: slurm
    uid: "{{ slurm_uid }}"
    group: slurm
    system: yes
    shell: /sbin/nologin
    home: /var/spool/slurm
    create_home: no
  when: ansible_os_family == 'RedHat'

- name: Install slurm common packages
  ansible.builtin.package:
    name: "{{ slurm_emulator | ternary(slurm_emulator_common_packages, slurm_common_packages) }}"
    state: latest

- name: Create slurm configuration directory
  ansible.builtin.file:
    path: /etc/slurm
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Deploy slurm configuration file
  ansible.builtin.template:
    src: slurm.conf.j2
    dest: /etc/slurm/slurm.conf
    owner: slurm
    group: slurm
    mode: '0644'
  notify:
    - Restart slurmctld
    - Restart slurmd

- name: Deploy munge key
  ansible.builtin.copy:
    src: "{{ slurm_local_munge_key_file }}"
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
  notify: Restart munge

# This is required on redhat based distributions as the service is not
# automatically started by the RPM packages, and it does not hurt on Debian.
- name: Ensure munge service is started
  ansible.builtin.service:
    name: munge
    state: started
    enabled: yes

# Each profile is applied in the group associated the keys or slurm_profiles
# hash or all the profiles are applied on the unique server node when
# slurm_emulator is true.
- name: "Run slurm profiles specific tasks"
  ansible.builtin.include_tasks: "{{ slurm_profile.key }}.yml"
  when: slurm_profile.value in group_names or slurm_emulator
  loop: "{{ slurm_profiles | dict2items }}"
  loop_control:
    loop_var: slurm_profile
