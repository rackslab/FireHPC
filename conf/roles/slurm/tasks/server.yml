---
- name: Create slurmctld state directory
  ansible.builtin.file:
    path: "{{ slurm_state_save_loc }}"
    state: directory
    owner: slurm
    group: slurm
    mode: '0700'

- name: Deploy slurmdbd configuration file
  ansible.builtin.template:
    src: slurmdbd.conf.j2
    dest: /etc/slurm/slurmdbd.conf
    owner: slurm
    group: slurm
    mode: '0600'
  notify: Restart slurmdbd

- name: Install slurm server specific packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ slurm_server_packages }}"

# This is required on redhat based distributions as the service is not
# automatically started by the RPM packages, and it does not hurt on Debian.
- name: Ensure slurm server services are started
  ansible.builtin.service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - slurmdbd
    - slurmctld

- name: Create cluster in slurmdbd
  ansible.builtin.command:
    cmd: "sacctmgr --immediate create cluster {{ slurm_cluster }}"
    creates: "/var/lib/mysql/slurm_acct_db/{{ slurm_cluster }}_job_table.ibd"

- name: Get current slurmdbd accounts
  ansible.builtin.command:
    cmd: sacctmgr --noheader --parsable2 list accounts format=Account
  register: slurmdbd_accounts

- name: Create account in slurmdbd
  ansible.builtin.command:
    cmd: "sacctmgr --immediate create account name={{ slurm_account }} cluster={{ slurm_cluster }}"
  when: slurm_account not in slurmdbd_accounts.stdout_lines

- name: Get current slurmdbd users
  ansible.builtin.command:
    cmd: sacctmgr --noheader --parsable2 list users format=User
  register: slurmdbd_users

- name: Create users in slurmdbd
  ansible.builtin.command:
    cmd: "sacctmgr --immediate create user name={{ item }} cluster={{ slurm_cluster }} account={{ slurm_account }}"
  when: item not in slurmdbd_users.stdout_lines
  with_items: "{{ slurm_users }}"
