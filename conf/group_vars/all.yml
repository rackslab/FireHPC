# shared variables
fhpc_local_ssh_dir: "{{ fhpc_cluster_state_dir }}/ssh"
fhpc_local_ca_dir: "{{ fhpc_cluster_state_dir }}/ca"
fhpc_ldap_server: "{{ groups['admin'][0] }}"
fhpc_ldap_base: "dc=cluster,dc={{ fhpc_cluster }}"
fhpc_primary_group: "{{ fhpc_groups[0].name }}"
fhpc_slurm_with_jwt: false
fhpc_slurmrestd_with_unix_socket: true
fhpc_slurmrestd_socket: /run/slurmrestd/slurmrestd.socket
fhpc_slurmrestd_port: 6820
fhpc_local_slurm_jwt_key: "{{ fhpc_cluster_state_dir }}/slurm/jwt_hs256.key"

# roles variables
common_local_ca_dir: "{{ fhpc_local_ca_dir }}"
common_ip_addresses: "{{ fhpc_addresses }}"
common_cluster: "{{ fhpc_cluster }}"
ssh_key_dir: "{{ fhpc_local_ssh_dir }}"
ldap_local_ca_dir: "{{ fhpc_local_ca_dir }}"
ldap_server_hostname: "{{ fhpc_ldap_server }}"
ldap_local_admin_password_file: "{{ fhpc_cluster_state_dir }}/ldap/ldap.password"
ldap_base: "dc=cluster,dc={{ fhpc_cluster }}"
ldap_domain: "cluster.{{ fhpc_cluster }}"
ldap_email_domain: "cluster.{{ fhpc_cluster }}"
ldap_users: "{{ fhpc_users }}"
ldap_groups: "{{ fhpc_groups }}"
sssd_ldap_base: "{{ fhpc_ldap_base }}"
sssd_ldap_server: "{{ fhpc_ldap_server }}"
users_ssh_host_key_dir: "{{ fhpc_local_ssh_dir }}"
users_defs: "{{ fhpc_users }}"
users_group: "{{ fhpc_primary_group }}"
slurm_emulator: "{{ fhpc_emulator_mode }}"
slurm_server: "{{ groups['admin'][0] }}"
# This hash associates slurm profiles in keys with a group of nodes on which the
# the profile must be applied when slurm_emulator is false. When slurm_emulator
# is true, all slurm profiles are applied on the single admin node.
slurm_profiles:
  compute: compute
  server: admin
  login: login
slurm_local_munge_key_file: "{{ fhpc_cluster_state_dir }}/munge/munge.key"
slurm_local_slurm_key_file: "{{ fhpc_cluster_state_dir }}/slurm/slurm.key"
slurm_local_mariadb_password_file: "{{ fhpc_cluster_state_dir }}/mariadb/mariadb.password"
slurm_local_jwt_key_file: "{{ fhpc_local_slurm_jwt_key }}"
slurm_with_jwt: "{{ fhpc_slurm_with_jwt }}"
slurm_users: "{{ fhpc_users | map(attribute='login') | list }}"
slurm_restd_with_unix_socket: "{{ fhpc_slurmrestd_with_unix_socket }}"
slurm_restd_socket: "{{ fhpc_slurmrestd_socket }}"
slurm_restd_port: "{{ fhpc_slurmrestd_port }}"
slurm_accounts: "{{ fhpc_groups }}"
slurm_compute_nodes: "{{ fhpc_nodes['compute'] }}"
racksdb_database: "{{ fhpc_db }}"
redis_local_password_file: "{{ fhpc_cluster_state_dir }}/redis/redis.password"
slurmweb_local_slurmrestd_jwt_key_file: "{{ fhpc_local_slurm_jwt_key }}"
slurmweb_slurmrestd_uri: "{{ fhpc_slurmrestd_with_unix_socket | ternary('unix:' ~ fhpc_slurmrestd_socket, 'http://localhost:' ~ fhpc_slurmrestd_port ) }}"
slurmweb_slurmrestd_auth: "{{ fhpc_slurm_with_jwt | ternary('jwt', 'local') }}"
slurmweb_slurmrestd_socket: "{{ fhpc_slurmrestd_socket }}"
slurmweb_http_server_names:
- "{{ slurmweb_hostname }}"
- "{{ slurmweb_hostname }}.{{ fhpc_namespace }}"
slurmweb_agent_settings_defaults:
  service:
    cluster: "{{ fhpc_cluster }}"
  slurmrestd:
    uri: "{{ slurmweb_slurmrestd_uri }}"
    auth: "{{ slurmweb_slurmrestd_auth }}"
    jwt_mode: "{{ slurmweb_slurmrestd_jwt_mode }}"
    jwt_key: "{{ slurmweb_slurmrestd_jwt_key }}"
    jwt_token: "{{ slurmweb_slurmrestd_jwt_token | default(omit) }}"
  cache:
    enabled: yes
    password: "{{ lookup('ansible.builtin.file', redis_local_password_file) }}"
slurmweb_gateway_settings_defaults:
  ui:
    host: "http://{{ slurmweb_hostname }}.{{ fhpc_namespace }}"
  agents:
    url: "http://{{ slurmweb_hostname }}/{{ slurmweb_agent_subdir }}"
  authentication:
    enabled: yes
  ldap:
    uri: "ldaps://{{ fhpc_ldap_server }}/"
    user_base: "ou=people,{{ fhpc_ldap_base }}"
    group_base: "ou=groups,{{ fhpc_ldap_base }}"
metrics_ldap_server: "{{ fhpc_ldap_server }}"
metrics_ldap_search_base: "{{ fhpc_ldap_base }}"
